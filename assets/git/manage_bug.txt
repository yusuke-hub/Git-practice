◉バグ管理
【入門編】
STEP1 バグを報告する
 ・バグの大小に関わらず、漏れなく報告する
   与える影響が小さく対応しなくても良いようなバグであれば、この後のステップでふるいにかける
 ・同様の報告がないか確認する
   バグ管理用サービスの検索機能などを活用して、調べる
 ・どうしたら起きるかを報告する
   バグの発生手順を可能な限り、具体的に記載する。他の人が、バグの原因を見つけるために、そのバグを再現するための作業を省く。
 ・どうなって欲しかったかを報告する

STEP2 優先度/担当者/期限などを決定する
 ・バグの整理
   バグの発見されるスピードより修正のほうが早い間はうまく回るが、現実としてはバグを修正してるうちに新たな未着手のバグが積み上がっていく。
 ・重要度と緊急度で優先順位をつける
 ・情報は更新し続ける
 ・「対応しないバグ」を決めることも重要
    システムの目的と照らし合わせることで、対応するべきかどうかを判断する

STEP3 バグを修正する
 ・バグ修正の一般的な流れ
  1,2に費やす時間が多くの割合を占めるため、やはりバグ報告の精度が重要
--------------------------------------------------------------------------------------------------------------------
  1 バグを再現させる
  2 バグの原因を特定する
  3 修正する
  4 修正された事を確認する
  ・同じ条件で確認を行う
  ・変更した箇所に関係する他の処理も確認する
  ・直っていなかった場合は、STEP3に戻る
  ・再現しないバグの対処法
    1 発生手順を確認する
    2 発生した環境を確認する
      毎日決まった時間に行われている処理の最中に特定の操作をしなければ起きなかったり、本番環境の設定、サーバーの設定まで同じにしなければ発生しないものもある。あるいは物理的な設備の破損など、システムの外側が原因であることも。
    3 それでも再現しない場合は、「再現しなかった」旨を添えて、いったん保留にする
--------------------------------------------------------------------------------------------------------------------
 ・「見つける」バグと「見つかる」バグ
   システム開発の後半のテスト工程で、発覚するバグ
   開発後の運用フェーズで、ユーザーからの報告であげられるバグ
 ・テストは誰が行うべきか？
   テスターあるいは開発に直接携わっていないメンバーによるテストが推奨される
   なぜなら開発者自身が行うと、バグのサッ生しそうなテストや網羅的なテストを無意識に避けてしまう傾向があるから。
   第三者の視点でテストをしてもらうつもりで、ユーザーに使用してもらう

【実践編】
・バグ管理システムを使うメリット
  どこからでも簡単にバグ報告ができる
   多くのバグ管理システムはWEBブラウザから利用できるため、お手軽
  必要な情報をもれなく登録できる
   管理項目をカスタマイズしたり、画像や動画、ファイルの添付できるので、修正担当者にビジュアルでバグ内容を伝えられる
  常に最新の情報を参照できる
  履歴も含めて管理できる
  複数人で同時にバグを修正できる
  後から探しやすい
   修正対象のバグと似たような過去のバグを特定し、解決までの経緯を確認する事で、素早く対応できる
 バージョン管理システムとの連携ができる
  ソースコードのコミット時に管理番号を入力する事で、バグの起票とそのバグに対するソースコードの修正を紐づけられる

◉プロジェクト管理
 「プロジェクト」
   目的を達成するための計画
 「管理」
   目的が達成できる包帯を包帯を維持すること
  → プロジェクト管理とは、計画が目的を達成できる状態を維持すること
   ・必要な作業をその作業がふさわしいメンバーに割り当てる
   ・納期までに全ての成果物が作成できるかを確認する
   ・技術的に難しい仕様がある場合に、仕様を変更するか別の手法を模索するかを判断する
   ・スケジュールが遅れている時に、その原因を見極めて様々な方法で対処し、遅れを取り戻す
   ・スケジュールの遅れが取り戻せないとはんん断した場合、締め切りの延期を提案する

  1 目的を確認する
   具体的な数字を入れる
   ex,自社ECサイトからの勝因購入率を10%向上させる
  2 成果物を決める
   ex,決済までの流れをシンプルにした購入フォーム、商品のセールスポイントをより強調したトップページ、検索でより上位に出るように回収したECサイトetc..
  3 必要なタスクの洗い出しとリスト化
  4 進捗を把握し、随時タスクを修正する
  5 目的を達成できたか振り返る

【様々な手法】
 ・PMBOK
   プロジェクト管理に関する10種類の知識体系
   1統合マネジメント 2スコープ〃 3タイム〃 4コスト〃 5品質〃 
   6人的資源〃 7コミュニケーション〃 8リスク〃 9調達〃 10ステークホルダー〃
 ・ウォーターフォールモデル
   時系列順に工程を分割して順番に実行していく手法
   終了した工程には戻らないので、方針変更に弱い
   比較的期間が長く、後戻りのしにくいプロジェクトに向いてる
 ・アジャイル
   プロジェクトを短い開発機関で区切り、実行、テスト、リリースするというサイクルを反復して継続する手法
   方針変更に柔軟に対応できる ⇄ 長期的な展望を持つことや、進捗管理の難易度が上がってしまう
   
