◉バグ管理
【入門編】
STEP1 バグを報告する
 ・バグの大小に関わらず、漏れなく報告する
   与える影響が小さく対応しなくても良いようなバグであれば、この後のステップでふるいにかける
 ・同様の報告がないか確認する
   バグ管理用サービスの検索機能などを活用して、調べる
 ・どうしたら起きるかを報告する
   バグの発生手順を可能な限り、具体的に記載する。他の人が、バグの原因を見つけるために、そのバグを再現するための作業を省く。
 ・どうなって欲しかったかを報告する

STEP2 優先度/担当者/期限などを決定する
 ・バグの整理
   バグの発見されるスピードより修正のほうが早い間はうまく回るが、現実としてはバグを修正してるうちに新たな未着手のバグが積み上がっていく。
 ・重要度と緊急度で優先順位をつける
 ・情報は更新し続ける
 ・「対応しないバグ」を決めることも重要
    システムの目的と照らし合わせることで、対応するべきかどうかを判断する

STEP3 バグを修正する
 ・バグ修正の一般的な流れ
  1,2に費やす時間が多くの割合を占めるため、やはりバグ報告の精度が重要
--------------------------------------------------------------------------------------------------------------------
  1 バグを再現させる
  2 バグの原因を特定する
  3 修正する
  4 修正された事を確認する
  ・同じ条件で確認を行う
  ・変更した箇所に関係する他の処理も確認する
  ・直っていなかった場合は、STEP3に戻る
  ・再現しないバグの対処法
    1 発生手順を確認する
    2 発生した環境を確認する
      毎日決まった時間に行われている処理の最中に特定の操作をしなければ起きなかったり、本番環境の設定、サーバーの設定まで同じにしなければ発生しないものもある。あるいは物理的な設備の破損など、システムの外側が原因であることも。
    3 それでも再現しない場合は、「再現しなかった」旨を添えて、いったん保留にする
--------------------------------------------------------------------------------------------------------------------
 ・「見つける」バグと「見つかる」バグ
   システム開発の後半のテスト工程で、発覚するバグ
   開発後の運用フェーズで、ユーザーからの報告であげられるバグ
 ・テストは誰が行うべきか？
   テスターあるいは開発に直接携わっていないメンバーによるテストが推奨される
   なぜなら開発者自身が行うと、バグのサッ生しそうなテストや網羅的なテストを無意識に避けてしまう傾向があるから。
   第三者の視点でテストをしてもらうつもりで、ユーザーに使用してもらう


